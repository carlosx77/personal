/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}


	task copyDependencies(type: Copy) {
		from configurations.compile
		into 'build/libs'
	}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    jcenter()
	mavenLocal()
	mavenCentral()
	maven { url "http://repo.spring.io/release" }
	maven { url "http://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/libs-snapshot" }
	maven { url "http://repo.spring.io/milestone" }
	maven { url "https://repo.spring.io/libs-milestone" }
}

ext {
	//spring libs
	springVersion = '5.0.10.RELEASE'
	springDataVersion = '2.0.11.RELEASE'
	
	//Database
	mariaDbVersion = '2.4.3'
	dbcpVersion = '2.1'
	
	//hibernate
	hibernateVersion = '5.4.0.Final'
	hibernateJpaVersion = '1.0.0.Final'
	
	//logging libs
	slf4jVersion = '1.7.25'
	logbackVersion = '1.2.3'
	
	
	spring = [
			context           : "org.springframework:spring-context:$springVersion",
			webmvc            : "org.springframework:spring-webmvc:$springVersion",
			aop               : "org.springframework:spring-aop:$springVersion",
			aspects           : "org.springframework:spring-aspects:$springVersion",
			tx                : "org.springframework:spring-tx:$springVersion",
			jdbc              : "org.springframework:spring-jdbc:$springVersion",
			contextSupport    : "org.springframework:spring-context-support:$springVersion",
			orm               : "org.springframework:spring-orm:$springVersion",
			data              : "org.springframework.data:spring-data-jpa:$springDataVersion",
			test              : "org.springframework:spring-test:$springVersion",
			jms               : "org.springframework:spring-jms:$springVersion",
			oxm               : "org.springframework:spring-oxm:$springVersion",
			webSocket         : "org.springframework:spring-websocket:$springVersion",
			messaging         : "org.springframework:spring-messaging:$springVersion",
			webflux           : "org.springframework:spring-webflux:$springVersion"
	]
	
	db = [
			mariaDb : "org.mariadb.jdbc:mariadb-java-client:$mariaDbVersion",
			dbcp2 : "org.apache.commons:commons-dbcp2:$dbcpVersion",
			dbcp  : "commons-dbcp:commons-dbcp:1.4"
	]
	
	hibernate = [
	    validator: "org.hibernate:hibernate-validator:5.1.3.Final",
	    ehcache : "org.hibernate:hibernate-ehcache:$hibernateVersion",
	    jpaModelGen: "org.hibernate:hibernate-jpamodelgen:$hibernateVersion",
	    jpaApi     : "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:$hibernateJpaVersion",
	    querydslapt: "com.mysema.querydsl:querydsl-apt:2.7.1",
	    em : "org.hibernate:hibernate-entitymanager:$hibernateVersion"
  	]
	
	misc = [
		slf4jJcl       : "org.slf4j:jcl-over-slf4j:$slf4jVersion",
		logback        : "ch.qos.logback:logback-classic:$logbackVersion"
	]
}


sourceSets {
	generated
	
    main {
        compileClasspath += generated.output
        runtimeClasspath += generated.output
    }

    test {
        compileClasspath += generated.output
        runtimeClasspath += generated.output
    }
}

sourceSets.generated.java.srcDirs = ['src/main/generated']

configurations {
	querydslapt
}

dependencies {
    testImplementation 'junit:junit:4.12'
    compile        hibernate.jpaApi,spring.orm,spring.context,misc.slf4jJcl,misc.logback, db.dbcp2, db.dbcp, db.mariaDb, hibernate.querydslapt, hibernate.jpaModelGen, hibernate.jpaModelGen, hibernate.em 
    implementation hibernate.querydslapt, hibernate.jpaModelGen, hibernate.jpaApi
    //annotationProcessor hibernate.jpaModelGen
	
}

/*

compileJava {
	classpath = configurations.compile
	options.compilerArgs += ['-AaddGenerationDate=true'] // Specific to Hibernate JPA meta model generation processor.
	options.annotationProcessorGeneratedSourcesDirectory = file("src/main/generated")	
}*/
